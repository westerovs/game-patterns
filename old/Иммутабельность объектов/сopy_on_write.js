// ==================================
// =========== Copy on write ========
// ===================================

/*
Метод копировании при записи. 
То есть, каждый раз, когда мы хотим изменить какую-либо часть состояния, 
мы создаём полностью независимую копию состояния, в которую вносим необходимое изменение.

Плюс этого подхода — простота и надёжность. Физически не существует никакого способа изменить оригинал, производя манипуляции над копией.

Есть и минус: производительность. Создание копии может занимать значительное время, а её хранение — значительное количество памяти.

- Создадим новый массив;
- Создадим копии всех трёх объектов;
- Изменим копию второго объекта;
- Положим копии объектов в новый массив.
*/

const state = [
    {
        name: 'Товар 1',
    },
    {
        name: {
            first: {
                name: 'Товар 2'
            }
        },
    },
    {
        name: 'Товар 3',
    },
];

function copyOnWrite(array) {
    const newArr = [];

    array.forEach((_, index) => {
        const temp = Object.assign({}, array[index])
        newArr.push(temp)
    });

    return newArr
}

const newState = copyOnWrite(state)
newState[1].name = 'котёнок';
console.log(state) // исходный массив не мутирован
console.log(newState) // новый массив мутирован
